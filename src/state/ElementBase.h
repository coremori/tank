// Generated by dia2code
#ifndef STATE__ELEMENTBASE__H
#define STATE__ELEMENTBASE__H

#include <string>

namespace state {
  class ElementGraphic;
  class ElementBase;
}

#include "ElementGraphic.h"

namespace state {

  /// class ElementBase - 
  class ElementBase {
    // Associations
    // Attributes
  protected:
    /// Position x
    int f_X;
    /// Position Y
    int f_Y;
    /// Identifiant de l'objet
    int f_Id;
    /// True si on peut traverser l'objet
    bool f_CanBeGetAcross;
    /// Nom de l'objet
    std::string f_Name;
    ElementGraphic* f_ElementGraphic;
    // Operations
  public:
    ElementBase (int id, bool canBeGetAcross, std::string name);
    virtual ~ElementBase ();
    int getX () const;
    int getY () const;
    int getId () const;
    bool getCanBeGetAcross () const;
    std::string getName () const;
    ElementGraphic* getGraphic () const;
    virtual int getLife () const;
    void setY (int y);
    void setX (int x);
    virtual ElementBase* clone () const = 0;
    virtual void takeDamage (int power, bool ignoreDefense = false);
    virtual void move (int dx, int dy);
  };

};

#endif
