// Generated by dia2code
#ifndef CACHE__CACHESTATEOBSERVER__H
#define CACHE__CACHESTATEOBSERVER__H

#include <vector>
#include "../state.h"
#include "state/StateEvent.h"

namespace state {
  class StateObserver;
}

#include "state/StateObserver.h"

namespace cache {

  /// class CacheStateObserver - Save the StateEvent that the Pilote will update after
  class CacheStateObserver : public state::StateObserver {
    // Attributes
  protected:
    std::vector<state::StateEvent*> stateEvent;
    // Operations
  public:
    void stateChanged (const state::StateEvent& e);
    virtual void applyStateChanged () = 0;
  protected:
    void clear ();
  };

};

#endif
