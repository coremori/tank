// Generated by dia2code
#ifndef AI__GARDENER__H
#define AI__GARDENER__H

#include <vector>
#include "state/State.h"

namespace ai {
  class Node;
}

#include "Node.h"

namespace ai {

  /// class Gardener - 
  class Gardener {
    // Associations
    // Attributes
  protected:
    std::vector<Node*> nodeWarehouse;
    int depthMax;
    state::State* state;
    engine::Ruler* ruler;
    int character;
    int ActualpvMe;
    int ActualpvOther;
    // Operations
  public:
    Gardener (int depthMax, state::State* state);
    int minimax_rec (Node* Node);
    int minimax_rec_max (Node* Node);
    int minimax_rec_min (Node* Node);
    std::vector<Node*> createChild (Node* Node);
    void evaluateScore (Node* node);
    void shot (int character);
    nextOrientation (int character);
    void ApplyAction (Node* node);
  };

};

#endif
